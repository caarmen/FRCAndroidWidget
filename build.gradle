import org.apache.tools.ant.filters.ReplaceTokens

import java.text.SimpleDateFormat

// Top-level build file where you can add configuration options common to all sub-projects/modules.

ext.globalProjectName = 'french-revolutionary-calendar-widget'


buildscript {
    ext.kotlin_version = '1.2.51'
    repositories {
        google()
        jcenter()
    }
    dependencies {
        // We can't use 3.x because it's not supported on api levels <= 7
        // https://issuetracker.google.com/issues/111146570
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'com.github.ben-manes.versions'

allprojects {
    repositories {
        mavenLocal()
        google()
        jcenter()
    }
    // Only show real releases with the ben-manes plugin.
    dependencyUpdates.resolutionStrategy = {
        componentSelection { rules ->
            rules.all { ComponentSelection selection ->
                boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                    selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
                }
                if (rejected) {
                    selection.reject('Release candidate')
                }
            }
        }
    }
    configurations.all {
        resolutionStrategy {
            force "com.android.support:support-v4:${supportLibVersion}"
        }
    }
}


def gitSha1() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

def buildDate() {
    def dateFormat = new SimpleDateFormat('yyyy-MM-dd\'T\'HH:mm\'Z\'')
    dateFormat.setTimeZone(TimeZone.getTimeZone('UTC'))
    return dateFormat.format(new Date())
}

// Only show real releases with the ben-manes plugin.
dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'alpha-preview', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}
ext.supportLibVersion = "27.1.1"
